// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  Active
  Blocked
  Suspended
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  email     String   @unique
  password  String

  avatar    String?
  name      String?
  gender    String?
  birthday  DateTime?
  height    Float?
  weight    Float?

  remark    String?

  // relations
  horoscopeId String?   @db.ObjectId
  horoscope   Horoscope? @relation(fields: [horoscopeId], references: [id])
  zodiacId    String?   @db.ObjectId
  zodiac      Zodiac?   @relation(fields: [zodiacId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    UserStatus   @default(Active)

  @@index([status])
  @@index([name])
  @@index([gender, birthday])
  @@index([horoscopeId])
  @@index([zodiacId])

  @@map("users")
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  email     String   @unique
  password  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

model Interest {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("interests")
}

model Horoscope {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("horoscopes")
}

model Zodiac {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("zodiacs")
}

model UserLog {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  action    String
  remark    String?
  ip        String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([action])

  @@map("user_logs")
}
